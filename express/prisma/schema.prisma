// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  moduleFormat = "esm"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model PalavraChave {
  nome String @id
  usuario PalavraUsuario[]
  discos PalavraDisco[]
  livros PalavraLivro[]
}

model Usuario {
  cod String @id @default(uuid()) 
  nome String
  tel1 String
  tel2 String?
  email String
  pais String
  estado String
  cidade String
  bairro String
  rua String
  senha String
  num_casa Int
  livros Livro[]
  discos Disco[] 
  avaliacao_livro AvaliacaoLivro[]
  avaliacao_disco AvaliacaoDisco[]
  seguidores Segue[] @relation("seguido")
  seguindo Segue[] @relation("seguinte")
  palavras_chave PalavraUsuario[]
}

model Livro {
  id_prod String @id @default(uuid())
  nome String
  valor Int
  condicao String
  descricao String
  autor String
  edicao String
  qtd_pag Int
  id_usuario String
  avaliacao AvaliacaoLivro[]
  vendedor Usuario @relation(fields: [id_usuario], references: [cod])
  palavras_chave PalavraLivro[]
}

model Disco {
  id_prod String @id @default(uuid())
  nome String
  valor Int
  condicao String
  descricao String
  artista String
  ano Int
  gravadora String
  id_usuario String
  vendedor Usuario @relation(fields: [id_usuario], references: [cod])
  avaliacao AvaliacaoDisco[]
  palavras_chave PalavraDisco[]
}

model AvaliacaoLivro {
  cod_usuario String
  id_prod String
  nota Int
  descricao String
  livro Livro @relation(fields: [id_prod], references: [id_prod])
  usuario Usuario @relation(fields: [cod_usuario], references: [cod])
  @@id([id_prod, cod_usuario])
}

model AvaliacaoDisco {
  cod_usuario String
  id_prod String
  nota Int
  descricao String
  disco Disco @relation(fields: [id_prod], references: [id_prod])
  usuario Usuario @relation(fields: [cod_usuario], references: [cod])
  @@id([id_prod, cod_usuario])
}

model Segue {
  id_seguinte String
  id_seguido String
  seguinte Usuario @relation("seguinte", fields: [id_seguinte], references: [cod])
  seguido Usuario @relation("seguido", fields: [id_seguido], references: [cod])
  @@id([id_seguinte, id_seguido])
}

model PalavraUsuario {
  usuarioid String
  palavraid String
  usuario Usuario @relation(fields: [usuarioid], references: [cod])
  palavra PalavraChave @relation(fields: [palavraid], references: [nome])
  @@id([usuarioid, palavraid])
}

model PalavraLivro {
  livroid String
  palavraid String
  livro Livro @relation(fields: [livroid], references: [id_prod])
  palavra PalavraChave @relation(fields: [palavraid], references: [nome])
  @@id([livroid, palavraid])
}

model PalavraDisco {
  discoid String
  palavraid String
  disco Disco @relation(fields: [discoid], references: [id_prod])
  palavra PalavraChave @relation(fields: [palavraid], references: [nome])
  @@id([discoid, palavraid])
}